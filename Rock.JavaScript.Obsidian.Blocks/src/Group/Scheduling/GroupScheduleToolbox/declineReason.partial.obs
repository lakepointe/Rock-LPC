<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->
<template>
    <Modal v-model="isVisible"
           title="Decline Reason"
           saveText="Save"
           :isSaveButtonDisabled="isSavingReason"
           @save="onSave">
        Hello from declineReason.partial!
    </Modal>
</template>

<script setup lang="ts">
    import { PropType, ref } from "vue";
    import Modal from "@Obsidian/Controls/modal.obs";
    import { Guid } from "@Obsidian/Types";
    import { useVModelPassthrough } from "@Obsidian/Utility/component";

    const props = defineProps({
        isVisible: {
            type: Boolean as PropType<boolean>,
            required: true
        },

        attendanceGuid: {
            type: String as PropType<Guid | null | undefined>,
            required: true
        }
    });

    const emit = defineEmits<{
        (e: "update:isVisible"): void
    }>();

    // #region Values

    const isVisible = useVModelPassthrough(props, "isVisible", emit);

    const isSavingReason = ref(false);
    const warningMessage = ref("");

    // #endregion Values

    // #region Event Handlers

    async function onSave(): Promise<void> {
        if (isSavingReason.value) {
            return;
        }

        isSavingReason.value = true;
        warningMessage.value = "";

        // ...

        isSavingReason.value = false;
        isVisible.value = false;
    }

    // #endregion Event Handlers
</script>
